<div class="relative grid grid-cols-3 gap-2 w-full h-full">
    {{!-- Products --}}
    <div class="col-span-2 bg-white h-full rounded-lg p-2 overflow-scroll">
        {{!-- Category product --}}
        <div>
            <table class="w-full text-base" id="menu_iphone">
                <tr class="grid grid-cols-4">
                    <td class="hover:bg-gray-400 hover:text-white cursor-pointer" onclick="loadProducts(this)">
                        Iphone 15
                    </td>
                    <td class="hover:bg-gray-400 hover:text-white cursor-pointer" onclick="loadProducts(this)">
                        Iphone 14
                    </td>
                    <td class="hover:bg-gray-400 hover:text-white cursor-pointer" onclick="loadProducts(this)">
                        Iphone 13
                    </td>
                    <td class="hover:bg-gray-400 hover:text-white cursor-pointer" onclick="loadProducts(this)">
                        Iphone 12
                    </td>
                    <td class="hover:bg-gray-400 hover:text-white cursor-pointer" onclick="loadProducts(this)">
                        Iphone 11
                    </td>
                    <td class="hover:bg-gray-400 hover:text-white cursor-pointer" onclick="loadProducts(this)">
                        Iphone X
                    </td>
                    <td class="hover:bg-gray-400 hover:text-white cursor-pointer" onclick="loadProducts(this)">
                        Iphone 8
                    </td>
                    <td class="hover:bg-gray-400 hover:text-white cursor-pointer" onclick="loadProducts(this)">
                        Iphone 7
                    </td>
                </tr>
            </table>
        </div>
        <br>
        {{!-- Items --}}
        <div class="overflow-scroll " >
            <div id="productDiv" class="grid grid-cols-4 gap-3 ">
                {{#each data}}
                    {{#each this.retail_price}}
                        <div class="hover:bg-gray-200 hover:text-black cursor-pointer relative flex justify-center text-left  p-2 border rounded-lg">
                            <div onclick="addToOrder('{{../this.product_name}}', '{{this}}','{{../this.link_image}}','{{this}}','{{@index}}','{{@key}}')">
                                <img src="/uploads/{{../this.link_image}}" alt="image" style="height: 220px; object-fit: cover;"/>
                                <h2 class="font-semibold text-xl py-3">{{../this.product_name}} {{@key}}</h2>
                                <p class="py-2 font-semibold text-xl text-green-600">{{this}}$</p>
                            </div>
                        </div>
                    {{/each}}
                {{/each}}
            </div>
        </div>
    </div>


    {{!-- Order list --}}
    <div class="bg-white  rounded-lg p-3 ">
        
        {{!--  --}}
        <div class="h-4/5 flex flex-col border-b-2 mb-2">
            <h1 class="font-bold text-xl">Customer Information</h1>
            <form id="customerSearchForm" class="bg-gray-200 rounded-lg">
                <div class="form-group">
                    <label for="customer_phone">Phone</label>
                    <input type="input" class="bg-gray-200" id="customer_phone" name="customer_phone" placeholder="Phone">
                </div>
                <div class="form-group">
                    <label for="customer_name">Name</label>
                    <input type="input" class="bg-gray-200" id="customer_name" name="customer_name" placeholder="Name">
                </div>
                    <div class="form-group">
                    <label for="customer_email">Email</label>
                    <input type="input" class="bg-gray-200" id="customer_email" name="customer_email" placeholder="Email">
                </div>
                <div class="flex gap-2">
                    <button type="submit" class="btn btn-primary w-full text-black py-2 px-5 hover:bg-green-500 hover:text-black bg-green-200 rounded-lg">
                        <i class="fas fa-plus mr-2"></i>
                        Check 
                    </button>
                </div>  
            </form>
            <div class="my-2 pb-3 border-b-2 flex justify-between">
                <div class="flex gap-2">
                    <input 
                    id="barcodeInput"
                    type="text" 
                    class="bg-gray-100 h-10 w-full min-w-fit border-none ml-2 outline-none text-base px-5 rounded-lg" 
                    placeholder="Choose by barcode..."/>

                    {{!-- Barcode --}}
                    <button id="btnBarcode"
                            class="bg-gray-200 text-black py-2 px-4 rounded flex items-center hover:bg-gray-300"
                            onclick="chooseProductByBarcode()">
                        <i class="fa-solid fa-barcode"></i>
                    </button>

                    {{!-- remove order --}}
                    <button class="bg-gray-200 text-red-500 py-2 px-4 rounded flex items-center hover:bg-gray-300" 
                            onclick="removeAllOrders()">
                        <i class="fa-regular fa-trash-can"></i>
                    </button>
                </div>
            </div>

            {{!-- List Items --}}
            <div class="flex-1 mt-2 overflow-scroll">
                {{!-- Item --}}
                <div class="relative px-2 rounded my-2 py-3 bg-gray-100 order-list">
                    
                </div>
            </div>
        </div>
        

        {{!-- Option pay --}}
        <div class="h-1/5 flex flex-col justify-between">
            <div>
                {{!-- Price --}}
                <div class="px-12">
                    <div class="flex justify-between font-semibold">
                        <span>Total Price:</span>
                        <span id="totalPrice">0$</span>
                    </div>
                </div>

                {{!-- method pay --}}
                <div class="input-radio image grid grid-cols-2 gap-2 mt-5 mx-10">
                    {{!-- Cash --}}
                    <div class="flex flex-cols justify-center">
                        <input class="hidden" type="radio" id="cash" name="methodpayment" value="cash">
                        <label for="cash">
                            <button id="payButton" 
                                    class="h-14 flex flex-col justify-center text-black py-2 px-5 hover:bg-green-500 hover:text-black bg-green-200 rounded-lg">
                                <img class="h-6 mt-1" src="/images/cash.png">
                                <span  class="text">Cash</span >
                            </button>
                        </label>
                    </div>

                    {{!-- Debit --}}
                    <div class="flex flex-cols justify-center">
                        <input class="hidden" type="radio" id="debit" name="methodpayment" value="debit">
                        <label for="debit">
                            {{!-- <div id="img-area" class="h-14 flex flex-col justify-between text-black py-2 px-5 bg-gray-200 rounded-lg">
                                <img class="h-6" src="/images/debit.png">
                                <button class="text">Debit</button>
                            </div> --}}
                            <button id="payButtonETH" 
                                    class="h-14 flex flex-col justify-center text-black py-2 px-5 hover:bg-green-500 hover:text-black bg-green-200 rounded-lg">
                                <img class="h-6 mt-1" src="/images/debit.png">
                                <span  class="text">Debit</span >
                            </button>
                        </label>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script>
    function toggleDropdown(n) {
        const dropdown = document.getElementById('dropdown' + n);
        dropdown.classList.toggle('hidden');
    }

    let i = 0;
    function addToOrder(productName, initialPrice, image, barcode,index ,memory) {
        // Get the order list container
        const orderListContainer = document.querySelector('.order-list');

        // Check if the product with the same name already exists in the order list
        {{!-- const existingProduct = orderListContainer.querySelector(`[data-product-name="${productName}"]`); --}}

        // Create a unique identifier for the priceItem
        const priceItemId = `priceItem-${index}`;

        // Declare quantityInput outside the if-else block
        let quantityInput;

        // If the product doesn't exist, create a new entry for the order list
        const orderItem = document.createElement('div');
        orderItem.classList.add('relative', 'px-2', 'rounded', 'my-2', 'py-3', 'bg-gray-100');
        orderItem.setAttribute('data-product-name', productName);
        orderItem.setAttribute('memory', memory);
        orderItem.setAttribute('price', initialPrice);

        // Assign the value of quantityInput in the else block
        quantityInput = document.createElement('input');
        quantityInput.classList.add('quantity-input', 'border', 'border-gray-300', 'w-16', 'text-center');

        // Add event listener to quantityInput
        quantityInput.addEventListener('input', function () {
            updateProductPrice(this, initialPrice, priceItemId);
        });

        // Fill the content of the order item (customize as needed)
        orderItem.innerHTML = `
            <div class="block">
                <div onclick="toggleDropdown(${i})" class="flex justify-between items-center cursor-pointer">
                    <div class="flex gap-4 items-center">
                        <div>
                            <i class="fa-solid fa-chevron-right"></i>
                        </div>
                        <!-- image -->
                        <div>
                            <img class="h-10" src="/uploads/${image}" />
                        </div>
                        <!-- Name -->
                        <span>${productName} ${memory}</span>
                    </div>

                    <div id="${priceItemId}" class="flex gap-4">
                        <!-- price -->
                        <span id = "finalPrice">${initialPrice}$</span>
                        <!-- Delete product -->
                        <div class="text-gray-500" onclick="deleteProduct(this, '${productName}')">
                            <i class="fa-solid fa-circle-xmark"></i>
                        </div>
                    </div>
                </div>

                <!-- Dropdown -->
                <div id="dropdown${i}" class="hidden bg-transparent mt-2 text-sm px-4 w-full">
                    <div class="flex justify-between mb-2">
                        <span>Price:</span>
                        <span id = "initialPrice">${initialPrice}$</span>
                    </div>
                    <div class="flex justify-between mb-2">
                        <span>Quantity:</span>
                        <input class="quantity-input border border-gray-300 w-16 text-center" type="number" value="1" oninput="updateProductPrice(this, '${initialPrice}', '${priceItemId}')"/>
                    </div>
                    <div class="flex justify-between mb-2">
                        <span>Memory:</span>
                        <span id="memory">${memory}</span>
                    </div>
                    <div class="flex justify-between mb-2">
                        <span>Color:</span>
                        <input type="radio" id="Black" name="corlor${i}" value="Black">
                        <label for="corlor">Black</label><br>
                        <input type="radio" id="Black" name="corlor${i}" value="White">
                        <label for="corlor">White</label><br>
                        <input type="radio" id="Black" name="corlor${i}" value="Gold">
                        <label for="corlor">Gold</label>
                    </div>
                </div>
            </div>
        `;

            // Append the new order item to the order list container
            orderListContainer.appendChild(orderItem);
            i = i+1;
            calculateTotalPrice();
            updateProductPrice(quantityInput, finalPrice, priceItemId);
        }
        

        // Function to update productPrice based on quantityInput value
        function updateProductPrice(quantityInput, priceItem, priceItemId) {
            const parentContainer = quantityInput.closest('.relative');
            const priceElement = parentContainer.querySelector(`#${priceItemId} span`);
            const newProductPrice = priceItem * parseInt(quantityInput.value);
            priceElement.textContent = newProductPrice + "$";
            calculateTotalPrice();
        }

        function calculateTotalPrice() {
            const orderListContainer = document.querySelector('.order-list');
            const orderItems = orderListContainer.querySelectorAll('.quantity-input');

            let totalPrice = 0;

            orderItems.forEach((quantityInput) => {
                const parentContainer = quantityInput.closest('.relative');
                const priceElement = parentContainer.querySelector('#initialPrice');
                const priceItemId = parseFloat(priceElement.textContent);
                const quantity = parseInt(quantityInput.value);
                totalPrice += priceItemId * quantity;
            });

            // Update the total price in the span with the id "totalPrice"
            const totalPriceSpan = document.getElementById('totalPrice');
            totalPriceSpan.textContent = totalPrice + "$";
        }

        function deleteProduct(deleteButton, productName) {
            const orderItem = deleteButton.closest('.order-list div[data-product-name="' + productName + '"]');
            orderItem.remove();
            calculateTotalPrice();
        }

        function removeAllOrders() {
            const orderListContainer = document.querySelector('.order-list');
            orderListContainer.innerHTML = '';
            calculateTotalPrice();
        }
        function chooseProductByBarcode() {
            const barcode = document.getElementById('barcodeInput').value;
            console.log(barcode);
            $.ajax({
                type: 'GET',
                url: '/productlist/product_search',
                data: { barcode: barcode },
                success: function (data) {
                    console.log("Received data:", data);
                    // Call addToOrder with the retrieved data
                    addToOrder(data.data.product_name, '850', data.data.link_image, data.barcode, data.index, '64GB');
                },
                error: function (error) {
                    console.log('Error fetching product details');
                }
            });
        }
        $(document).ready(function () {
            // Function to update the table with data
            function fillFormInputs(data) {
                if(data){
                    $('#customer_name').val(data.customer_name);
                    $('#customer_email').val(data.customer_email);
                }else{
                    $('#customer_name').val("Customer Not Found");
                    $('#customer_email').val("Customer Not Found");
                }
            }

            // Your existing code for handling form submission
            $('#customerSearchForm').submit(function (e) {
                e.preventDefault();

                const searchTerm = $('#customer_phone').val();

                $.ajax({
                    type: 'GET',
                    url: '/customer/customer_search',
                    data: { customer_search: searchTerm },
                    success: function (data) {
                        console.log("Received data:", data);
                        fillFormInputs(data.data);
                    },
                    error: function (error) {
                        console.log("error");
                    }
                });
            });
        });

        // Add an event listener for the Pay button
        document.getElementById('payButton').addEventListener('click', function () {
            // Get the order list container
            const orderListContainer = document.querySelector('.order-list');

            // Get all order items
            const orderItems = orderListContainer.querySelectorAll('.order-list > div');

            // Create an array to store order details
            const orders = [];
            const totalPrice = document.getElementById('totalPrice').textContent;
            const customer_name = document.getElementById('customer_name').value;
            const customer_phone = document.getElementById('customer_phone').value;
            const customer_email = document.getElementById('customer_email').value;

            // Iterate through each order item
            let i = 0;
            orderItems.forEach((orderItem) => {
                const productName = orderItem.getAttribute('data-product-name');
                const memory = orderItem.getAttribute('memory');
                const price = orderItem.getAttribute('price');
                const quantity = orderItem.querySelector('.quantity-input').value;
                const color = orderItem.querySelector(`input[name='corlor${i}']:checked`)?.value;
                i = i+1;
                // Add order details to the array
                orders.push({
                    productName: productName,
                    memory: memory,
                    quantity: quantity,
                    color: color,
                    price: price
                });
            });
            orders.push({
                totalPrice: totalPrice,
                customer_name: customer_name,
                customer_phone: customer_phone,
                customer_email: customer_email
            });
            // Construct the URL with order details
            const url = `/pos/cashPayment?orders=${encodeURIComponent(JSON.stringify(orders))}`;

            // Navigate to the cashPayment page
            window.location.href = url;
        });


        //Add avent listener for the pay ETH
        document.getElementById('payButtonETH').addEventListener('click', function () {
            // Get the order list container
            const orderListContainer = document.querySelector('.order-list');

            // Get all order items
            const orderItems = orderListContainer.querySelectorAll('.order-list > div');

            // Create an array to store order details
            const orders = [];
            const totalPrice = document.getElementById('totalPrice').textContent;
            const customer_name = document.getElementById('customer_name').value;
            const customer_phone = document.getElementById('customer_phone').value;
            const customer_email = document.getElementById('customer_email').value;

            // Iterate through each order item
            let i = 0;
            orderItems.forEach((orderItem) => {
                const productName = orderItem.getAttribute('data-product-name');
                const memory = orderItem.getAttribute('memory');
                const price = orderItem.getAttribute('price');
                const quantity = orderItem.querySelector('.quantity-input').value;
                const color = orderItem.querySelector(`input[name='corlor${i}']:checked`)?.value;
                i = i+1;
                // Add order details to the array
                orders.push({
                    productName: productName,
                    memory: memory,
                    quantity: quantity,
                    color: color,
                    price: price
                });
            });
            orders.push({
                totalPrice: totalPrice,
                customer_name: customer_name,
                customer_phone: customer_phone,
                customer_email: customer_email
            });
            // Construct the URL with order details
            const url = `/pos/payWithETH?orders=${encodeURIComponent(JSON.stringify(orders))}`;

            // Navigate to the cashPayment page
            window.location.href = url;
        });


        function loadProducts(clickedElement) {
            // Retrieve the series text from the clicked element
            var series = clickedElement.textContent.trim();
            console.log(series);
            
            // Update the product grid with the new data
            var productDiv = document.querySelector('#productDiv');
            productDiv.innerHTML = '';
            
            if(series == 'Iphone 15'){
                var html = `
                    {{#each data}}
                        {{#if (eq this.series 'Iphone 15')}}
                            {{#each this.retail_price}}
                                    <div class="hover:bg-gray-200 hover:text-black cursor-pointer relative flex justify-center text-left p-2 border rounded-lg">
                                        <div onclick="addToOrder('{{../this.product_name}}', '{{this}}','{{../this.link_image}}','{{this}}','{{@index}}','{{@key}}')">
                                            <img src="/uploads/{{../this.link_image}}" alt="image" style="height: 220px; object-fit: cover;"/>
                                            <h2 class="font-semibold text-xl py-3">{{../this.product_name}} {{@key}}</h2>
                                            <p class="py-2 font-semibold text-xl text-green-600">{{this}}$</p>
                                        </div>
                                    </div>
                            {{/each}}
                        {{/if}}
                    {{/each}}
                `;
            }
            if(series == 'Iphone 14'){
                var html = `
                    {{#each data}}
                        {{#if (eq this.series 'Iphone 14')}}
                            {{#each this.retail_price}}
                                    <div class="hover:bg-gray-200 hover:text-black cursor-pointer relative flex justify-center text-left p-2 border rounded-lg">
                                        <div onclick="addToOrder('{{../this.product_name}}', '{{this}}','{{../this.link_image}}','{{this}}','{{@index}}','{{@key}}')">
                                            <img src="/uploads/{{../this.link_image}}" alt="image" style="height: 220px; object-fit: cover;"/>
                                            <h2 class="font-semibold text-xl py-3">{{../this.product_name}} {{@key}}</h2>
                                            <p class="py-2 font-semibold text-xl text-green-600">{{this}}$</p>
                                        </div>
                                    </div>
                            {{/each}}
                        {{/if}}
                    {{/each}}
                `;
            }
            if(series == 'Iphone 13'){
                var html = `
                    {{#each data}}
                        {{#if (eq this.series 'Iphone 13')}}
                            {{#each this.retail_price}}
                                    <div class="hover:bg-gray-200 hover:text-black cursor-pointer relative flex justify-center text-left p-2 border rounded-lg">
                                        <div onclick="addToOrder('{{../this.product_name}}', '{{this}}','{{../this.link_image}}','{{this}}','{{@index}}','{{@key}}')">
                                            <img src="/uploads/{{../this.link_image}}" alt="image" style="height: 220px; object-fit: cover;"/>
                                            <h2 class="font-semibold text-xl py-3">{{../this.product_name}} {{@key}}</h2>
                                            <p class="py-2 font-semibold text-xl text-green-600">{{this}}$</p>
                                        </div>
                                    </div>
                            {{/each}}
                        {{/if}}
                    {{/each}}
                `;
            }
            if(series == 'Iphone 12'){
                var html = `
                    {{#each data}}
                        {{#if (eq this.series 'Iphone 12')}}
                            {{#each this.retail_price}}
                                    <div class="hover:bg-gray-200 hover:text-black cursor-pointer relative flex justify-center text-left p-2 border rounded-lg">
                                        <div onclick="addToOrder('{{../this.product_name}}', '{{this}}','{{../this.link_image}}','{{this}}','{{@index}}','{{@key}}')">
                                            <img src="/uploads/{{../this.link_image}}" alt="image" style="height: 220px; object-fit: cover;"/>
                                            <h2 class="font-semibold text-xl py-3">{{../this.product_name}} {{@key}}</h2>
                                            <p class="py-2 font-semibold text-xl text-green-600">{{this}}$</p>
                                        </div>
                                    </div>
                            {{/each}}
                        {{/if}}
                    {{/each}}
                `;
            }
            if(series == 'Iphone 11'){
                var html = `
                    {{#each data}}
                        {{#if (eq this.series 'Iphone 11')}}
                            {{#each this.retail_price}}
                                    <div class="hover:bg-gray-200 hover:text-black cursor-pointer relative flex justify-center text-left p-2 border rounded-lg">
                                        <div onclick="addToOrder('{{../this.product_name}}', '{{this}}','{{../this.link_image}}','{{this}}','{{@index}}','{{@key}}')">
                                            <img src="/uploads/{{../this.link_image}}" alt="image" style="height: 220px; object-fit: cover;"/>
                                            <h2 class="font-semibold text-xl py-3">{{../this.product_name}} {{@key}}</h2>
                                            <p class="py-2 font-semibold text-xl text-green-600">{{this}}$</p>
                                        </div>
                                    </div>
                            {{/each}}
                        {{/if}}
                    {{/each}}
                `;
            }
            if(series == 'Iphone X'){
                var html = `
                    {{#each data}}
                        {{#if (eq this.series 'Iphone X')}}
                            {{#each this.retail_price}}
                                    <div class="hover:bg-gray-200 hover:text-black cursor-pointer relative flex justify-center text-left p-2 border rounded-lg">
                                        <div onclick="addToOrder('{{../this.product_name}}', '{{this}}','{{../this.link_image}}','{{this}}','{{@index}}','{{@key}}')">
                                            <img src="/uploads/{{../this.link_image}}" alt="image" style="height: 220px; object-fit: cover;"/>
                                            <h2 class="font-semibold text-xl py-3">{{../this.product_name}} {{@key}}</h2>
                                            <p class="py-2 font-semibold text-xl text-green-600">{{this}}$</p>
                                        </div>
                                    </div>
                            {{/each}}
                        {{/if}}
                    {{/each}}
                `;
            }
            if(series == 'Iphone 8'){
                var html = `
                    {{#each data}}
                        {{#if (eq this.series 'Iphone 8')}}
                            {{#each this.retail_price}}
                                    <div class="hover:bg-gray-200 hover:text-black cursor-pointer relative flex justify-center text-left p-2 border rounded-lg">
                                        <div onclick="addToOrder('{{../this.product_name}}', '{{this}}','{{../this.link_image}}','{{this}}','{{@index}}','{{@key}}')">
                                            <img src="/uploads/{{../this.link_image}}" alt="image" style="height: 220px; object-fit: cover;"/>
                                            <h2 class="font-semibold text-xl py-3">{{../this.product_name}} {{@key}}</h2>
                                            <p class="py-2 font-semibold text-xl text-green-600">{{this}}$</p>
                                        </div>
                                    </div>
                            {{/each}}
                        {{/if}}
                    {{/each}}
                `;
            }
            if(series == 'Iphone 7'){
                var html = `
                    {{#each data}}
                        {{#if (eq this.series 'Iphone 7')}}
                            {{#each this.retail_price}}
                                    <div class="hover:bg-gray-200 hover:text-black cursor-pointer relative flex justify-center text-left p-2 border rounded-lg">
                                        <div onclick="addToOrder('{{../this.product_name}}', '{{this}}','{{../this.link_image}}','{{this}}','{{@index}}','{{@key}}')">
                                            <img src="/uploads/{{../this.link_image}}" alt="image" style="height: 220px; object-fit: cover;"/>
                                            <h2 class="font-semibold text-xl py-3">{{../this.product_name}} {{@key}}</h2>
                                            <p class="py-2 font-semibold text-xl text-green-600">{{this}}$</p>
                                        </div>
                                    </div>
                            {{/each}}
                        {{/if}}
                    {{/each}}
                `;
            }

            productDiv.innerHTML = html;
        }

</script>